name: PR Size Check

on:
  pull_request:
    types: [opened, synchronize, reopened]

permissions:
  pull-requests: write
  issues: write

jobs:
  pr-size-check:
    runs-on: ubuntu-latest
    name: Check PR Size
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Get PR changes
        id: pr-changes
        run: |
          # Get the number of lines changed
          LINES_CHANGED=$(git diff --shortstat origin/${{ github.base_ref }}...HEAD | awk '{print $4+$6}')
          echo "lines_changed=$LINES_CHANGED" >> $GITHUB_OUTPUT
          
          # Get file count
          FILES_CHANGED=$(git diff --name-only origin/${{ github.base_ref }}...HEAD | wc -l)
          echo "files_changed=$FILES_CHANGED" >> $GITHUB_OUTPUT
          
          echo "Lines changed: $LINES_CHANGED"
          echo "Files changed: $FILES_CHANGED"

      - name: Add PR size label
        uses: actions/github-script@v7
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            const linesChanged = parseInt('${{ steps.pr-changes.outputs.lines_changed }}') || 0;
            const prNumber = context.issue.number;
            
            // Remove existing size labels
            const labels = ['size/XS', 'size/S', 'size/M', 'size/L', 'size/XL', 'size/XXL'];
            for (const label of labels) {
              try {
                await github.rest.issues.removeLabel({
                  owner: context.repo.owner,
                  repo: context.repo.repo,
                  issue_number: prNumber,
                  name: label
                });
              } catch (error) {
                // Label might not exist
              }
            }
            
            // Add appropriate size label
            let sizeLabel = 'size/XS';
            if (linesChanged > 1000) {
              sizeLabel = 'size/XXL';
            } else if (linesChanged > 500) {
              sizeLabel = 'size/XL';
            } else if (linesChanged > 400) {
              sizeLabel = 'size/L';
            } else if (linesChanged > 200) {
              sizeLabel = 'size/M';
            } else if (linesChanged > 100) {
              sizeLabel = 'size/S';
            }
            
            await github.rest.issues.addLabels({
              owner: context.repo.owner,
              repo: context.repo.repo,
              issue_number: prNumber,
              labels: [sizeLabel]
            });

      - name: Comment on large PR
        if: steps.pr-changes.outputs.lines_changed > 400
        uses: actions/github-script@v7
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            const linesChanged = parseInt('${{ steps.pr-changes.outputs.lines_changed }}');
            const filesChanged = parseInt('${{ steps.pr-changes.outputs.files_changed }}');
            const prNumber = context.issue.number;
            
            const body = `## ⚠️ Large PR Detected\n\n` +
              `This pull request has **${linesChanged} lines changed** across **${filesChanged} files**.\n\n` +
              `### PR Size Guidelines\n` +
              `- **Recommended**: < 400 lines\n` +
              `- **Current**: ${linesChanged} lines\n\n` +
              `### Why smaller PRs matter:\n` +
              `✅ Easier and faster to review\n` +
              `✅ Reduced risk of bugs\n` +
              `✅ Better for incremental development\n` +
              `✅ Easier to revert if needed\n\n` +
              `### Recommendations:\n` +
              `Consider splitting this PR into smaller, focused changes:\n` +
              `- Break down by feature or functionality\n` +
              `- Separate refactoring from new features\n` +
              `- Split tests into separate PRs if appropriate\n` +
              `- Use feature flags for large changes\n\n` +
              `If this PR cannot be split (e.g., large generated files, major refactoring), ` +
              `please add a comment explaining why and ensure extra thorough testing.\n\n` +
              `---\n` +
              `*This is an automated message. For questions, please contact the maintainers.*`;
            
            // Check if we already commented
            const comments = await github.rest.issues.listComments({
              owner: context.repo.owner,
              repo: context.repo.repo,
              issue_number: prNumber
            });
            
            const botComment = comments.data.find(
              comment => comment.user.type === 'Bot' && comment.body.includes('Large PR Detected')
            );
            
            if (!botComment) {
              await github.rest.issues.createComment({
                owner: context.repo.owner,
                repo: context.repo.repo,
                issue_number: prNumber,
                body: body
              });
            }

      - name: Check PR size status
        if: steps.pr-changes.outputs.lines_changed > 1000
        run: |
          echo "::error::PR is extremely large (>1000 lines). Consider splitting it into smaller PRs."
          echo "::warning::This PR has ${{ steps.pr-changes.outputs.lines_changed }} lines changed, which exceeds recommended limits significantly."
          # Note: We don't fail the workflow to allow flexibility, but we strongly recommend splitting
