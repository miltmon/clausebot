# API Contract Testing workflow with Spectral and Schemathesis
# Validates OpenAPI specifications and tests API contracts
name: API Contract Testing

on:
  pull_request:
    branches: ["main"]
    paths:
      - 'contracts/**'
      - 'src/**'
      - '.github/workflows/api-contract-testing.yml'
  push:
    branches: ["main"]
    paths:
      - 'contracts/**'
      - 'src/**'
  schedule:
    # Run weekly on Wednesdays at 10 AM UTC
    - cron: '0 10 * * 3'

jobs:
  spectral-lint:
    name: Spectral OpenAPI Linting
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@eef61447b9ff4aafe5dcd4e0bbf5d482be7e7871  # v4.2.1
      
    - name: Setup Node.js
      uses: actions/setup-node@0a44ba7841725637a19e28fa30b79a866c81b0a6  # v4.0.4
      with:
        node-version: '20.x'
        
    - name: Install Spectral
      run: npm install -g @stoplight/spectral-cli@6.11.x
      
    - name: Create Spectral ruleset if not present
      run: |
        if [ ! -f ".spectral.yaml" ]; then
          cat > .spectral.yaml << 'EOF'
        extends: ["spectral:oas", "spectral:asyncapi"]
        rules:
          # OpenAPI specific rules
          oas3-api-servers: error
          oas3-examples-value-or-externalValue: warn
          oas3-operation-security-defined: error
          oas3-parameter-description: warn
          oas3-schema: error
          oas3-server-not-example.com: error
          oas3-unused-component: warn
          oas3-valid-media-example: warn
          oas3-valid-schema-example: warn
          
          # General API rules
          contact-properties: warn
          info-contact: warn
          info-description: warn
          info-license: warn
          license-url: warn
          no-$ref-siblings: error
          no-eval-in-markdown: error
          no-script-tags-in-markdown: error
          openapi-tags: warn
          operation-description: warn
          operation-operationId: error
          operation-operationId-unique: error
          operation-operationId-valid-in-url: error
          operation-parameters: error
          operation-singular-tag: warn
          operation-success-response: error
          operation-tags: error
          operation-tag-defined: error
          path-declarations-must-exist: error
          path-keys-no-trailing-slash: error
          path-not-include-query: error
          path-params: error
          tag-description: warn
          typed-enum: warn
        EOF
          echo "Created default .spectral.yaml ruleset"
        fi
        
    - name: Run Spectral linting
      run: |
        if [ -f "contracts/openapi.yaml" ]; then
          spectral lint contracts/openapi.yaml --format json --output spectral-results.json || true
          spectral lint contracts/openapi.yaml --format pretty
        else
          echo "No OpenAPI spec found at contracts/openapi.yaml"
          exit 1
        fi
        
    - name: Upload Spectral results
      if: always()
      uses: actions/upload-artifact@b4b15b8c7c6ac21ea08fcf65892d2ee8f75cf882  # v4.4.3
      with:
        name: spectral-results
        path: spectral-results.json
        retention-days: 30

  schemathesis:
    name: Schemathesis API Contract Testing
    runs-on: ubuntu-latest
    timeout-minutes: 20
    
    steps:
    - name: Checkout code
      uses: actions/checkout@eef61447b9ff4aafe5dcd4e0bbf5d482be7e7871  # v4.2.1
      
    - name: Setup Python
      uses: actions/setup-python@0b93645e9fea7318ecaed2b359559ac225c90a2b  # v5.3.0
      with:
        python-version: '3.11'
        
    - name: Install Schemathesis
      run: pip install schemathesis==3.27.x
      
    - name: Setup Node.js for app server
      uses: actions/setup-node@0a44ba7841725637a19e28fa30b79a866c81b0a6  # v4.0.4
      with:
        node-version: '20.x'
        cache: 'npm'
        
    - name: Install app dependencies
      run: npm ci --ignore-scripts
      
    - name: Build and start application
      run: |
        npm run build
        npm run dev &
        sleep 15
        # Wait for server to be ready
        timeout 30 bash -c 'until curl -sf http://localhost:5173 > /dev/null; do sleep 2; done' || true
        
    - name: Run Schemathesis tests
      run: |
        if [ -f "contracts/openapi.yaml" ]; then
          # Test against local dev server if available, otherwise skip
          if curl -sf http://localhost:5173/health > /dev/null 2>&1 || curl -sf http://localhost:5173 > /dev/null 2>&1; then
            echo "Running Schemathesis contract tests..."
            schemathesis run contracts/openapi.yaml \
              --base-url http://localhost:5173 \
              --checks all \
              --hypothesis-deadline=5000 \
              --hypothesis-max-examples=50 \
              --junit-xml schemathesis-report.xml \
              --report schemathesis-report.html || echo "Schemathesis tests completed with issues"
          else
            echo "Application server not responding. Skipping Schemathesis tests."
            echo "To enable these tests, ensure your API responds at the configured base URL."
          fi
        else
          echo "No OpenAPI spec found at contracts/openapi.yaml"
          exit 1
        fi
        
    - name: Upload Schemathesis results
      if: always()
      uses: actions/upload-artifact@b4b15b8c7c6ac21ea08fcf65892d2ee8f75cf882  # v4.4.3
      with:
        name: schemathesis-results
        path: |
          schemathesis-report.xml
          schemathesis-report.html
        retention-days: 30
    
    - name: Send failure notification
      if: failure()
      uses: dawidd6/action-send-mail@2cea9617b09d79a095af21254fbcb7ae95903dde  # v3.12.0
      with:
        server_address: ${{ secrets.MAIL_SERVER }}
        server_port: ${{ secrets.MAIL_PORT }}
        username: ${{ secrets.MAIL_USERNAME }}
        password: ${{ secrets.MAIL_PASSWORD }}
        subject: 'CI Failure: API contract testing failed'
        body: |
          API contract testing workflow failed for ${{ github.repository }}
          Branch: ${{ github.ref }}
          Commit: ${{ github.sha }}
          
          View details: ${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }}
        to: ${{ secrets.NOTIFICATION_EMAIL }}
        from: GitHub Actions
