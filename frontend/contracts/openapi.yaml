# OpenAPI 3.0 specification stub for ClauseBot.AI API
# This is a template - customize endpoints, schemas, and responses for your API
openapi: 3.0.3
info:
  title: ClauseBot.AI API
  description: |
    API specification for ClauseBot.AI application.
    This is a stub file - customize with your actual API endpoints.
  version: 1.0.0
  contact:
    name: ClauseBot.AI Support
  license:
    name: Private

servers:
  - url: https://api.clausebot.ai/v1
    description: Production server
  - url: http://localhost:3000/api/v1
    description: Development server

paths:
  /health:
    get:
      summary: Health check endpoint
      description: Returns the health status of the API
      operationId: getHealth
      tags:
        - Health
      responses:
        '200':
          description: Service is healthy
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    example: ok
                  timestamp:
                    type: string
                    format: date-time

  /documents:
    get:
      summary: List documents
      description: Retrieve a list of documents
      operationId: listDocuments
      tags:
        - Documents
      parameters:
        - name: limit
          in: query
          description: Maximum number of documents to return
          schema:
            type: integer
            default: 20
            minimum: 1
            maximum: 100
        - name: offset
          in: query
          description: Number of documents to skip
          schema:
            type: integer
            default: 0
            minimum: 0
      responses:
        '200':
          description: List of documents
          content:
            application/json:
              schema:
                type: object
                properties:
                  documents:
                    type: array
                    items:
                      $ref: '#/components/schemas/Document'
                  total:
                    type: integer
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '500':
          $ref: '#/components/responses/InternalServerError'

    post:
      summary: Create a document
      description: Upload and create a new document
      operationId: createDocument
      tags:
        - Documents
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DocumentCreate'
      responses:
        '201':
          description: Document created successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Document'
        '400':
          $ref: '#/components/responses/BadRequestError'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '500':
          $ref: '#/components/responses/InternalServerError'

  /documents/{documentId}:
    get:
      summary: Get a document
      description: Retrieve a specific document by ID
      operationId: getDocument
      tags:
        - Documents
      parameters:
        - name: documentId
          in: path
          required: true
          description: The document ID
          schema:
            type: string
            format: uuid
      responses:
        '200':
          description: Document details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Document'
        '404':
          $ref: '#/components/responses/NotFoundError'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '500':
          $ref: '#/components/responses/InternalServerError'

components:
  schemas:
    Document:
      type: object
      required:
        - id
        - title
        - createdAt
      properties:
        id:
          type: string
          format: uuid
          description: Unique document identifier
        title:
          type: string
          description: Document title
          minLength: 1
          maxLength: 255
        content:
          type: string
          description: Document content
        createdAt:
          type: string
          format: date-time
          description: Creation timestamp
        updatedAt:
          type: string
          format: date-time
          description: Last update timestamp

    DocumentCreate:
      type: object
      required:
        - title
      properties:
        title:
          type: string
          description: Document title
          minLength: 1
          maxLength: 255
        content:
          type: string
          description: Document content

    Error:
      type: object
      required:
        - message
      properties:
        message:
          type: string
          description: Error message
        code:
          type: string
          description: Error code
        details:
          type: object
          description: Additional error details

  responses:
    BadRequestError:
      description: Bad request - invalid input
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'

    UnauthorizedError:
      description: Unauthorized - authentication required
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'

    NotFoundError:
      description: Resource not found
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'

    InternalServerError:
      description: Internal server error
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'

  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT

security:
  - bearerAuth: []
